Notes

SSH (Secure shell)

- cryptographic network protocol for operating network services securely over an unsecured network
- ex: remote command line, login
- client server architecture
- standard TCP port for SSH: 22


UID vs GID

- Linux assigns number to each user = user ID = UID 
- identifies the user and the resources he can access
- stored in /etc/passwd
- Group ID store in /etc/group

/etc/passwd

- database that contains information about users that may log into the system or other operating system user identities that own running processses
- format “ Username:Password:UID:GID:UIDinfo:Homedir:Command/Shell ”
- ref: https://www.cyberciti.biz/faq/understanding-etcpasswd-file-format/


chmod and chown commands

- chmod [user/group/others] options files 
   permissions: read 4, write 2, execute 1
   options: -R recursive i.e. including objects in subdirectories
                -v verbose, show objects changed

- chown newuser:newgroup file_name
- changes owner of files or directories




Environment variables

- same as variables in programming but at a system or session level
- usually all uppercase with underscores as separator
- accessed with $NAME (Linux)
- PATH variable determines the path the computer looks for when executing a shell command
- ref: https://www.youtube.com/watch?v=lqqQZhTTzyU&ab_channel=TDChannel

X11 / X window system
 
- provides the base for the GUI on Linux
- X server bc capable to display output to remote machine on network
- Display environment variable contains IP address of the system of output display
- ref: https://www.youtube.com/watch?v=4J5snV2wjtw&ab_channel=JoeCollins
https://askubuntu.com/questions/432255/what-is-the-display-environment-variable




Linux superuser/root access

root is the conventional name of the user who has all rights or permissions (to all files and programs) in all modes (single- or multi-user). The root user can do many things an ordinary user cannot, such as changing the ownership of files and binding to ports numbered below 1024. The etymology of the term may be that root is the only user account with permission to modify the root directory of a Unix system.

Ref: https://www.youtube.com/watch?v=p78Ir0ZXcaE&ab_channel=SistemOdas%C4%B1






























Procedure to install netbeans docker :
(1. Be able to run docker without sudo
	- sudo groupadd docker
	- sudo usermod -aG docker ${USER}
	- su -s ${USER}, to enable root account sudo -i passwd root
	- verify that you are able to run docker commands w/out sudo )
2. run netbeans script inside docker-netbeans folder

Docker-Firefox analysis
Dockerfile:
1. Baseimage: ubuntu:14.04
2. update packages and install firefox
3. defines a environment variable for UID = UID of user running the container and GID = …
		!!! environment variable only for build!!! for envvar in final image use ENV 
4. creates directory in home folder
5. creates a developer user with UID and GID
6. creates a group with GID and UID as owner
7.  Give root access to developer group
8. change ownership of developer folder to UID:GID
9. set developer as the intended user when the image is run
10. defines home environment variable for use in final image
11. sets default command of container to launch firefox

Build parameters
-t = allocate pseudo tty = teletypewriter
-i = kkep stdin open
--rm = automatically remove container on exit
-e = defines display environment variable to be the same as the machine’s
-v binds the x-11 volume to the docker container





1. create directory 
2. create Dockerfile inside directory
What are the different type of containers that we need to bind together?
Multiple or single container?

3. create docker-compose and include launch parameters
4. Assess quality of eclipse running in docker container 


RUN sudo apt-get updates && sudo apt install firefox
